{"version":3,"sources":["img/leaves and shit.png","img/the-one.gif","Home/Home.tsx","WeddingParty/PersonCard.tsx","WeddingParty/WeddingParty.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Home","props","useEffect","setCustomUnits","document","documentElement","style","setProperty","window","innerHeight","innerWidth","addEventListener","className","src","img","PersonCard","name","relation","WeddingParty","boys_cards","wedding_people","boys","reduce","acc","cur","ele","hide","push","girls_cards","girls","top_bar_list","page_link","TopBar","top_bar_elements","map","i","arr","page","getPage","console","log","undefined","onClick","s","location","href","key","id","URLSearchParams","search","get","App","content","leaves","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"sqDAAAA,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mNC4B5BC,MAvBf,SAAcC,GAaV,OAXAC,qBAAU,WAKN,SAASC,IACLC,SAASC,gBAAgBC,MAAMC,YAAY,QAA3C,UAA4E,IAArBC,OAAOC,YAA9D,OACAL,SAASC,gBAAgBC,MAAMC,YAAY,QAA3C,UAA2E,IAApBC,OAAOE,WAA9D,OALJP,IACAK,OAAOG,iBAAiB,SAAUR,KAMpC,IAGE,oCACI,yBAAKS,UAAU,iBACX,yBAAKA,UAAU,WAAf,qBACA,yBAAKA,UAAU,eAAc,yBAAKC,IAAKC,U,mBClBxC,SAASC,EAAWd,GAC/B,OACI,yBAAKW,UAAU,cACX,6BAAMX,EAAMe,MACZ,6BAAK,yBAAKH,IAAKZ,EAAMa,OACrB,6BAAMb,EAAMgB,W,WCDT,SAASC,IAEpB,IAAMC,EAAaC,EAAeC,KAAKC,QAAO,SAACC,EAAkBC,GAC7D,IAAMC,EAAM,kBAACV,EAAD,CAAYC,KAAMQ,EAAIR,KAAMF,IAAKU,EAAIV,IAAKG,SAAUO,EAAIP,WAIpE,OAHgB,IAAZO,EAAIE,MACJH,EAAII,KAAKF,GAENF,IACT,IAEIK,EAAcR,EAAeS,MAAMP,QAAO,SAACC,EAAkBC,GAC/D,IAAMC,EAAM,kBAACV,EAAD,CAAYC,KAAMQ,EAAIR,KAAMF,IAAKU,EAAIV,IAAKG,SAAUO,EAAIP,WAIpE,OAHgB,IAAZO,EAAIE,MACJH,EAAII,KAAKF,GAENF,IACT,IAEF,OACI,yBAAKX,UAAU,gBACX,yBAAKA,UAAU,uBAAf,sBACSgB,GADT,YACwBT,M,oBCnB9BW,EAAe,CACnB,CACEd,KAAK,OACLe,UAAW,IAMb,CACEf,KAAK,gBACLe,UAAW,UAgDf,SAASC,IAEP,IAAMC,EAAmBH,EAAaI,KAAI,SAACV,EAAKW,EAAGC,GAOjD,IAAMC,EAAOC,IAMb,OALAC,QAAQC,IAAI,CAACH,UACTA,IAAOb,EAAIO,gBAAqBU,IAAPJ,GAAoC,KAAhBb,EAAIO,YACnDQ,QAAQC,IAAI,WAAWhB,EAAIR,MAGrB,yBAAK0B,QAXb,WACE,IAAMC,EAAoB,KAAhBnB,EAAIO,UAAe,IAAnB,cAA8BP,EAAIO,WAC5CvB,OAAOoC,SAASC,KAAOF,GASUG,IAAKX,GAAIX,EAAIR,SAGlD,OACE,yBAAK+B,GAAG,UACLd,GAKP,SAASK,IACP,OAAO,IAAIU,gBAAgBxC,OAAOoC,SAASK,QAAQC,IAAI,KAG1CC,MA7Df,WAEE,IAEIC,EAQJ,OALEA,EADS,UAJEd,IAKA,kBAAC,EAAD,MAEA,kBAAC,EAAD,MAIX,6BACI,yBAAK1B,UAAU,aAAa8B,QAAS,cAC/B,yBAAK9B,UAAU,aAAamC,GAAG,WAC3B,yBAAKlC,IAAKwC,IAAQzC,UAAU,gBAEhC,yBAAKA,UAAU,wBACb,kBAACoB,EAAD,MACCoB,GAEH,yBAAKxC,UAAU,aAAamC,GAAG,WAC3B,yBAAKlC,IAAKwC,IAAQzC,UAAU,gBAEhC,yBAAKA,UAAU,iBACf,yBAAKA,UAAU,uBCnDT0C,QACW,cAA7B9C,OAAOoC,SAASW,UAEe,UAA7B/C,OAAOoC,SAASW,UAEhB/C,OAAOoC,SAASW,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFvD,SAASwD,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7B,QAAQ6B,MAAMA,EAAMC,c","file":"static/js/main.06e5a41b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/leaves and shit.2f85bed8.png\";","module.exports = __webpack_public_path__ + \"static/media/the-one.2354f916.gif\";","import React, { useEffect } from 'react';\n\nimport \"./Home.css\"\nimport img from \"../img/the-one.gif\"; \n\nfunction Home(props: any) {\n\n    useEffect(()=>{\n\n        setCustomUnits();\n        window.addEventListener('resize', setCustomUnits);\n        \n        function setCustomUnits(){\n            document.documentElement.style.setProperty('--cvh', `${window.innerHeight * 0.01}px`);\n            document.documentElement.style.setProperty('--cvw', `${window.innerWidth * 0.01}px`);\n        }\n    },[]);\n\n    return (\n        <>\n            <div className=\"centerContent\">\n                <div className=\"img_txt\">November 20, 2021</div>\n                <div className=\"the_one_img\"><img src={img} ></img></div>\n            </div>\n        </>\n    );\n}\n\nexport default Home;","import React, { useState, useEffect } from 'react';\n\nimport './personCard.css';\n\nexport default function PersonCard(props:{name:string, img:string, relation:string}){\n    return (\n        <div className=\"personCard\">\n            <div>{props.name}</div>\n            <div><img src={props.img}></img></div>\n            <div>{props.relation}</div>\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\n\nimport './WeddingParty.css';\n\nimport PersonCard from './PersonCard';\nimport wedding_people from './wedding_people.json';\n\n\nexport default function WeddingParty(){\n\n    const boys_cards = wedding_people.boys.reduce((acc:JSX.Element[],cur)=>{\n        const ele = <PersonCard name={cur.name} img={cur.img} relation={cur.relation}></PersonCard>\n        if( cur.hide !==true ){\n            acc.push(ele);\n        }\n        return acc\n    },[]);\n\n    const girls_cards = wedding_people.girls.reduce((acc:JSX.Element[],cur)=>{\n        const ele = <PersonCard name={cur.name} img={cur.img} relation={cur.relation}></PersonCard>\n        if( cur.hide !==true ){\n            acc.push(ele);\n        }\n        return acc\n    },[]);\n\n    return (\n        <div className=\"WeddingParty\">\n            <div className=\"WeddingPartyWrapper\">\n                {[...girls_cards,...boys_cards]}\n            </div>\n        </div>\n    );\n}\n","import React from 'react';\n\n// import TheOne from \"./TheOne/TheOne\";\nimport Home from \"./Home/Home\"\nimport WeddingParty from \"./WeddingParty/WeddingParty\"\n// import CountDown from \"./CountDown/CountDown\"\n// import SaveTheDate from \"./SaveTheDate/SaveTheDate\"\n\nimport leaves from \"./img/leaves and shit.png\"\n\nconst top_bar_list = [\n  {\n    name:\"Home\",\n    page_link: \"\",\n  },\n  // {\n  //   name:\"Our Story\",\n  //   page_link: \"story\",\n  // },\n  {\n    name:\"Wedding Party\",\n    page_link: \"party\",\n  },\n  // {\n  //   name:\"Registry\",\n  //   page_link: \"registry\",\n  // },\n  // {\n  //   name:\"Accommodations\",\n  //   page_link: \"accommodations\",\n  // },\n  // {\n  //   name:\"COVID-19 Sux\",\n  //   page_link: \"covid\",\n  // }\n];\n\nfunction App(){\n  \n  const page = getPage();\n\n  let content;\n\n  if( page===\"party\" ){\n    content = (<WeddingParty></WeddingParty>);\n  }else{\n    content = (<Home></Home>);\n  }\n\n  return (\n    <div>\n        <div className=\"home_outer\" onClick={()=>{}}>\n              <div className=\"leaves_img\" id=\"leaves1\">\n                  <img src={leaves} className=\"leaves_src\"></img>\n              </div>\n              <div className=\"centerContentWrapper\">\n                <TopBar></TopBar>\n                {content}\n              </div>\n              <div className=\"leaves_img\" id=\"leaves2\">\n                  <img src={leaves} className=\"leaves_src\"></img>\n              </div>\n              <div className=\"blackBox top\"></div>\n              <div className=\"whiteBox bottom\"></div>\n          </div>\n    </div>\n  );\n}\n\nfunction TopBar(){\n\n  const top_bar_elements = top_bar_list.map((cur, i, arr)=>{\n\n    function handleClick(){\n      const s = cur.page_link===\"\"?\"/\":`/?p=${cur.page_link}`;\n      window.location.href = s;\n    }\n\n    const page = getPage();\n    console.log({page});\n    if( page===cur.page_link || (page===undefined && cur.page_link===\"\") ){\n      console.log('on page '+cur.name)\n    } \n\n    return (<div onClick={handleClick} key={i}>{cur.name}</div>);\n  });\n\n  return (\n    <div id=\"topbar\">\n      {top_bar_elements}\n    </div>\n  );\n}\n\nfunction getPage(){\n  return new URLSearchParams(window.location.search).get('p');\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}